---
- name: Install labcontroller package & dependencies
  package:
    name:
      - beaker-lab-controller
      - dnsmasq
      - conserver
      - conserver-client
  become: true
  notify:
    - restart httpd

- name: Verify if the labcontroller exists
  shell: |
    set -o pipefail
    bkr labcontroller-list | grep "^{{ beaker_lab.fqdn }}$"
  args:
    warn: false
    executable: /bin/bash
  register: labcontrollers
  changed_when: false
  failed_when: false
  become: true

- name: Register the labcontroller
  shell: >
      bkr labcontroller-create --fqdn {{ beaker_lab.fqdn }}
      --user host/labctrl --password labctrl
      --email {{ beaker_admin_email }}
      > /root/bkr_labcontroler-create_{{ beaker_lab.fqdn }}
  when: "labcontrollers.rc != 0"
  become: true

- name: Create the labcontroller configuration file
  template:
    src: templates/etc/beaker/labcontroller.conf.j2
    dest: /etc/beaker/labcontroller.conf
    mode: 0640
    owner: root
    group: apache
  notify: restart labcontroller services
  become: true

- name: Install dnsmasq configuration file
  template:
    src: templates/etc/dnsmasq.d/beaker.conf.j2
    dest: /etc/dnsmasq.d/beaker.conf
    mode: 0644
    owner: root
    group: root
  become: true
  notify: restart dnsmasq

- name: Start dnsmasq
  service:
    name: dnsmasq
    state: started
    enabled: true
  become: true

- name: Start the labcontroller services
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  become: true
  with_items:
    - beaker-proxy
    - beaker-watchdog
    - beaker-provision

- name: Populate service facts
  service_facts:
- name: Enable DHCP/DNS/TFTP services in firewalld
  firewalld:
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  when:
    - "'firewalld.service' in ansible_facts.services"
    - "ansible_facts.services['firewalld.service']['state'] == 'running'"
  become: true
  tags: [ firewall ]
  with_items:
    - dhcp
    - dns
    - tftp

- name: Enable port 8000 for the lab controller ping-back in firewalld
  firewalld:
    port: 8000/tcp
    permanent: true
    immediate: true
    state: enabled
  when:
    - "'firewalld.service' in ansible_facts.services"
    - "ansible_facts.services['firewalld.service']['state'] == 'running'"
  become: true
  tags: [ firewall ]

- name: Install ipmitool_lanplus powerscript
  copy:
    src: files/ipmitool_lanplus
    dest: /etc/beaker/power-scripts/ipmitool_lanplus
    mode: 0755
  become: true

- name: Install redfish powerscript
  copy:
    src: files/redfish
    dest: /etc/beaker/power-scripts/redfish
    mode: 0755
  become: true

- name: Generate a token from beaker
  uri:
    url: http://localhost/bkr/login
    method: POST
    body:
      user_name: "{{ beaker_admin_login }}"
      password: "{{ beaker_admin_password }}"
      login: 1
    body_format: form-urlencoded
    status_code: 302
  register: login

- name: Add the ipmitool_lanplus powertype
  uri:
    url: http://localhost/bkr/powertypes/
    method: POST
    body:
      name: ipmitool_lanplus
    body_format: json
    headers:
      Accept: application/json
      Content-Type: application/json
      Cookie: "{{ login.set_cookie }}"
    status_code: [201, 409]
  changed_when: powertypes.status == 201
  register: powertypes

- name: Add the redfish powertype
  uri:
    url: http://localhost/bkr/powertypes/
    method: POST
    body:
      name: redfish
    body_format: json
    headers:
      Accept: application/json
      Content-Type: application/json
      Cookie: "{{ login.set_cookie }}"
    status_code: [201, 409]
  changed_when: redfish_powertype.status == 201
  register: redfish_powertype
